#!/bin/zsh

export HISTFILE=~/.zsh_history

search_terms=()
search_mode="-c"
exclude_terms=()

# Function to display usage instructions
usage() {
    echo "Usage: hifi [-w|-c] <term1> [<term2> ...] [-x <exclude1> [<exclude2> ...]]"
    echo "Options:"
    echo "  -w    Search for commands containing all terms with word boundaries"
    echo "  -c    Search for commands containing all terms (default)"
    echo "  -x    Exclude specified terms from the result"
    exit 1
}

# Function to perform search using grep and sequential filtering
hifigrep() {
    local search_terms=("$@")
    local first_term="${search_terms[1]}"
    local result

    # Search for the first term with or without word boundaries
    result=$(grep -E "$first_term" "$HISTFILE")

    # Loop through the remaining terms
    for ((i = 2; i <= ${#search_terms[@]}; i++)); do
        local term="${search_terms[i]}"
        # Search for the term with or without word boundaries
        temp_result=$(echo "$result" | grep -E "$term")
        result="$temp_result"
    done

    echo "$result"
}

# Function to exclude specified terms from the result
hifiexclude() {
    local result="$1"
    for exclude_term in "${exclude_terms[@]}"; do
        result=$(echo "$result" | grep -E -v "$exclude_term")
    done
    echo "$result"
}

# Process command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -w) search_mode="-w";;
        -c) search_mode="-c";;
        -x) shift
            exclude_terms+=("$@")
            break;;
        *) search_terms+=("$1");;
    esac
    shift
done

# Check if at least one search term is provided
if [ ${#search_terms[@]} -eq 0 ]; then
    echo "Error: At least one search term is required."
    usage
fi

# Adjust patterns based on search mode
if [ "$search_mode" = "-w" ]; then
    for ((i = 1; i <= ${#search_terms[@]}; i++)); do
        search_terms[i]="\\b${search_terms[i]}\\b"
    done
fi

# Read history file and perform search
if [ -f "$HISTFILE" ]; then
    result=$(hifigrep "${search_terms[@]}")
    result=$(hifiexclude "$result")
    echo "$result"
else
    echo "History file not found."
fi

